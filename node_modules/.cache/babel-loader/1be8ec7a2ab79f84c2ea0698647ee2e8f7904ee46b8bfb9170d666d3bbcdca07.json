{"ast":null,"code":"var _jsxFileName = \"/Users/mac/AYA_LMS/src/components/Homepage/JustAdded.jsx\",\n  _s = $RefreshSig$();\n// import React from 'react'\n// import CourseCards from '../CourseCards'\n// import herobg from '../../assets/herobg.png';\n// import { Box } from '@chakra-ui/react';\n// import { Flex, Text, Image } from '@chakra-ui/react' \n\n// const JustAdded = (props) => {\n//   return (\n//     <>\n//        <Flex\n//     minH={'85vh'}\n//     >\n//       <Box\n//         w={'40%'}\n//         h={'100%'}\n//         >\n//         <Image src={herobg} alt=\"thumbnail\" objectFit=\"contain\" w={'100%'} h={'100%'}/>\n//       </Box>\n\n//       <Box bg={'#ffffff'} p={2} w={'60%'} h={'100%'}>\n//         <Text as='b' fontSize={['lg', 'xl']}>Build a Dapp</Text>\n//         <Text fontSize={['sm', 'md']}>Learn how to build a dapp with solidity and react</Text>\n//       </Box>\n\n//     <Box>\n//     <CourseCards\n//       img={herobg}\n//       title='Build a Dapp'\n//       description='Learn how to build a dapp with solidity and react'\n//       />\n\n//       <CourseCards\n//       img={herobg}\n//       title='Build a Dapp'\n//       description='Learn how to build a dapp with solidity and react'\n//       />\n\n//       <CourseCards\n//       img={herobg}\n//       title='Build a Dapp'\n//       description='Learn how to build a dapp with solidity and react'\n//       />\n//     </Box>\n\n//     </Flex>\n\n//     </>\n//   )\n// }\n\n// export default JustAdded\n\n// import React, { useState } from 'react'\n// // import CourseCards from '../CourseCards'\n// import herobg from '../../assets/herobg.png';\n// import { Box } from '@chakra-ui/react';\n// import { Flex, Text, Image } from '@chakra-ui/react'\n\n// const courseData = {\n//   courses: [\n//     {\n//       img: herobg,\n//       title: 'Build a Dapp',\n//       description: 'Learn how to build a dapp with solidity and react',\n//     },\n//     {\n//       img: herobg,\n//       title: 'Build a Dapp',\n//       description: 'Learn how to build a dapp with solidity and react',\n//     },\n//     {\n//       img: herobg,\n//       title: 'Build a Dapp',\n//       description: 'Learn how to build a dapp with solidity and react',\n//     },\n//     {\n//       img: herobg,\n//       title: 'Build a Dapp',\n//       description: 'Learn how to build a dapp with solidity and react',\n//     },\n//   ],\n// };\n\n// const JustAdded = (props) => {\n// const [activeIndex, setActiveIndex] = useState(0);\n\n// const handleCourseCardClick = (index) => {\n// setActiveIndex(index);\n// }\n\n// return (\n// <>\n// <Flex minH={'85vh'}>\n// <Box w={'40%'} h={'100%'}>\n// <Image src={herobg} alt=\"thumbnail\" objectFit=\"contain\" w={'100%'} h={'100%'} />\n// </Box>\n\n//     <Box bg={'#ffffff'} p={2} w={'60%'} h={'100%'}>\n//       <Text as='b' fontSize={['lg', 'xl']}>\n//         {courseData.courses[activeIndex].title}\n//       </Text>\n//       <Text fontSize={['sm', 'md']}>\n//         {courseData.courses[activeIndex].description}\n//       </Text>\n//     </Box>\n\n//     <Box>\n//       {courseData.courses.map((course, index) => (\n//         <CourseCards\n//           key={index}\n//           {...course}\n//           // img={course.img}\n//           // title={course.title}\n//           // description={course.description}\n//           onClick={() => handleCourseCardClick(index)}\n//           isActive={index === activeIndex}\n//         />\n//       ))}\n//     </Box>\n\n//   </Flex>\n// </>\n// )\n// }\n\n// export default JustAdded\n\n// const CourseCards = (props) => {\n//   return (\n//     <Flex\n//     p={2}\n//     w={'50%'}\n//     h={'30vh'}\n//     // flexDirection={['column', 'row']}\n//     // display=\"flex\" alignItems=\"center\"\n\n//     >\n//       <Box\n//       w={'40%'}\n//       h={'100%'}\n//       >\n//         <Image src={props.img} alt=\"thumbnail\" objectFit=\"contain\" w={'100%'} h={'100%'}/>\n//       </Box>\n\n//       <Box bg={'#ffffff'} p={2} w={'60%'} h={'100%'}>\n//         <Text as='b' fontSize={['lg', 'xl']}>{props.title}</Text>\n//         <Text fontSize={['sm', 'md']}>{props.description}</Text>\n//       </Box>\n//     </Flex>\n//   )\n// }\n\nimport React, { useState } from 'react';\nimport CourseCards from '../CourseCards';\nimport herobg from '../../assets/herobg.png';\nimport { Box } from '@chakra-ui/react';\nimport { Flex, Text, Button } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst courseData = {\n  courses: [{\n    img: herobg,\n    title: 'Getting Started with Web3 Development',\n    description: 'Learn how to build a dapp with solidity and react'\n  }, {\n    img: herobg,\n    title: 'Getting Started with Web3 Development',\n    description: 'Learn how to build a dapp with solidity and react'\n  }, {\n    img: herobg,\n    title: 'Getting Started with Web3 Development',\n    description: 'Learn how to build a dapp with solidity and react'\n  }, {\n    img: herobg,\n    title: 'Getting Started with Web3 Development',\n    description: 'Learn how to build a dapp with solidity and react'\n  }, {\n    img: herobg,\n    title: 'Build a Dapp',\n    description: 'Learn how to build a dapp with solidity and react'\n  }]\n};\nconst JustAdded = props => {\n  _s();\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const coursesPerPage = 3; // change this to the number of courses you want to display per page\n\n  const handleCourseCardClick = index => {\n    setActiveIndex(index);\n  };\n\n  // calculate the index of the last course on the current page\n  const lastIndex = currentPage * coursesPerPage;\n\n  // calculate the index of the first course on the current page\n  const firstIndex = lastIndex - coursesPerPage;\n\n  // slice the array of courses to display only the courses for the current page\n  const coursesToShow = courseData.courses.slice(firstIndex, lastIndex);\n\n  // handle pagination\n  const paginate = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      fontSize: \"3xl\",\n      fontWeight: \"bold\",\n      mb: \"4\",\n      children: \"Just Added\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      flexWrap: \"wrap\",\n      justifyContent: \"center\",\n      alignItems: 'flex-end',\n      flexDirection: 'column',\n      children: coursesToShow.map((course, index) => /*#__PURE__*/_jsxDEV(CourseCards, {\n        img: course.img,\n        title: course.title,\n        description: course.description,\n        active: index === activeIndex,\n        onClick: () => handleCourseCardClick(index)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 3\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: \"4\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline\",\n        coursesPerPage: coursesPerPage,\n        totalCourses: courseData.courses.length,\n        paginate: paginate,\n        children: \"Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 3\n  }, this);\n};\n_s(JustAdded, \"ymmAvO/xIea0GNGBZqXtl/Ny4Ss=\");\n_c = JustAdded;\nexport default JustAdded;\nvar _c;\n$RefreshReg$(_c, \"JustAdded\");","map":{"version":3,"names":["React","useState","CourseCards","herobg","Box","Flex","Text","Button","jsxDEV","_jsxDEV","courseData","courses","img","title","description","JustAdded","props","_s","activeIndex","setActiveIndex","currentPage","setCurrentPage","coursesPerPage","handleCourseCardClick","index","lastIndex","firstIndex","coursesToShow","slice","paginate","pageNumber","children","fontSize","fontWeight","mb","fileName","_jsxFileName","lineNumber","columnNumber","flexWrap","justifyContent","alignItems","flexDirection","map","course","active","onClick","mt","variant","totalCourses","length","_c","$RefreshReg$"],"sources":["/Users/mac/AYA_LMS/src/components/Homepage/JustAdded.jsx"],"sourcesContent":["// import React from 'react'\n// import CourseCards from '../CourseCards'\n// import herobg from '../../assets/herobg.png';\n// import { Box } from '@chakra-ui/react';\n// import { Flex, Text, Image } from '@chakra-ui/react' \n\n// const JustAdded = (props) => {\n//   return (\n//     <>\n//        <Flex\n//     minH={'85vh'}\n//     >\n//       <Box\n//         w={'40%'}\n//         h={'100%'}\n//         >\n//         <Image src={herobg} alt=\"thumbnail\" objectFit=\"contain\" w={'100%'} h={'100%'}/>\n//       </Box>\n      \n//       <Box bg={'#ffffff'} p={2} w={'60%'} h={'100%'}>\n//         <Text as='b' fontSize={['lg', 'xl']}>Build a Dapp</Text>\n//         <Text fontSize={['sm', 'md']}>Learn how to build a dapp with solidity and react</Text>\n//       </Box>\n\n\n//     <Box>\n//     <CourseCards\n//       img={herobg}\n//       title='Build a Dapp'\n//       description='Learn how to build a dapp with solidity and react'\n//       />\n\n//       <CourseCards\n//       img={herobg}\n//       title='Build a Dapp'\n//       description='Learn how to build a dapp with solidity and react'\n//       />\n\n//       <CourseCards\n//       img={herobg}\n//       title='Build a Dapp'\n//       description='Learn how to build a dapp with solidity and react'\n//       />\n//     </Box>\n\n//     </Flex>\n      \n//     </>\n//   )\n// }\n\n// export default JustAdded\n\n\n// import React, { useState } from 'react'\n// // import CourseCards from '../CourseCards'\n// import herobg from '../../assets/herobg.png';\n// import { Box } from '@chakra-ui/react';\n// import { Flex, Text, Image } from '@chakra-ui/react'\n\n// const courseData = {\n//   courses: [\n//     {\n//       img: herobg,\n//       title: 'Build a Dapp',\n//       description: 'Learn how to build a dapp with solidity and react',\n//     },\n//     {\n//       img: herobg,\n//       title: 'Build a Dapp',\n//       description: 'Learn how to build a dapp with solidity and react',\n//     },\n//     {\n//       img: herobg,\n//       title: 'Build a Dapp',\n//       description: 'Learn how to build a dapp with solidity and react',\n//     },\n//     {\n//       img: herobg,\n//       title: 'Build a Dapp',\n//       description: 'Learn how to build a dapp with solidity and react',\n//     },\n//   ],\n// };\n\n// const JustAdded = (props) => {\n// const [activeIndex, setActiveIndex] = useState(0);\n\n// const handleCourseCardClick = (index) => {\n// setActiveIndex(index);\n// }\n\n// return (\n// <>\n// <Flex minH={'85vh'}>\n// <Box w={'40%'} h={'100%'}>\n// <Image src={herobg} alt=\"thumbnail\" objectFit=\"contain\" w={'100%'} h={'100%'} />\n// </Box>\n\n//     <Box bg={'#ffffff'} p={2} w={'60%'} h={'100%'}>\n//       <Text as='b' fontSize={['lg', 'xl']}>\n//         {courseData.courses[activeIndex].title}\n//       </Text>\n//       <Text fontSize={['sm', 'md']}>\n//         {courseData.courses[activeIndex].description}\n//       </Text>\n//     </Box>\n\n//     <Box>\n//       {courseData.courses.map((course, index) => (\n//         <CourseCards\n//           key={index}\n//           {...course}\n//           // img={course.img}\n//           // title={course.title}\n//           // description={course.description}\n//           onClick={() => handleCourseCardClick(index)}\n//           isActive={index === activeIndex}\n//         />\n//       ))}\n//     </Box>\n\n//   </Flex>\n// </>\n// )\n// }\n\n// export default JustAdded\n\n\n// const CourseCards = (props) => {\n//   return (\n//     <Flex\n//     p={2}\n//     w={'50%'}\n//     h={'30vh'}\n//     // flexDirection={['column', 'row']}\n//     // display=\"flex\" alignItems=\"center\"\n\n//     >\n//       <Box\n//       w={'40%'}\n//       h={'100%'}\n//       >\n//         <Image src={props.img} alt=\"thumbnail\" objectFit=\"contain\" w={'100%'} h={'100%'}/>\n//       </Box>\n      \n//       <Box bg={'#ffffff'} p={2} w={'60%'} h={'100%'}>\n//         <Text as='b' fontSize={['lg', 'xl']}>{props.title}</Text>\n//         <Text fontSize={['sm', 'md']}>{props.description}</Text>\n//       </Box>\n//     </Flex>\n//   )\n// }\n\nimport React, { useState } from 'react';\nimport CourseCards from '../CourseCards';\nimport herobg from '../../assets/herobg.png';\nimport { Box } from '@chakra-ui/react';\nimport { Flex, Text,  Button } from '@chakra-ui/react';\n\nconst courseData = {\n  courses: [\n    {\n      img: herobg,\n      title: 'Getting Started with Web3 Development',\n      description: 'Learn how to build a dapp with solidity and react',\n    },\n    {\n      img: herobg,\n      title: 'Getting Started with Web3 Development',\n      description: 'Learn how to build a dapp with solidity and react',\n    },\n    {\n      img: herobg,\n      title: 'Getting Started with Web3 Development',\n      description: 'Learn how to build a dapp with solidity and react',\n    },\n    {\n      img: herobg,\n      title: 'Getting Started with Web3 Development',\n      description: 'Learn how to build a dapp with solidity and react',\n    },\n    {\n      img: herobg,\n      title: 'Build a Dapp',\n      description: 'Learn how to build a dapp with solidity and react',\n    },\n  ],\n};\n\nconst JustAdded = (props) => {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const coursesPerPage = 3; // change this to the number of courses you want to display per page\n\n  const handleCourseCardClick = (index) => {\n    setActiveIndex(index);\n  };\n\n  // calculate the index of the last course on the current page\n  const lastIndex = currentPage * coursesPerPage;\n\n  // calculate the index of the first course on the current page\n  const firstIndex = lastIndex-coursesPerPage;\n\n  // slice the array of courses to display only the courses for the current page\n  const coursesToShow = courseData.courses.slice(firstIndex, lastIndex);\n  \n  // handle pagination\n  const paginate = (pageNumber) => {\n  setCurrentPage(pageNumber);\n  };\n  \n  return (\n  <Box>\n  <Text fontSize=\"3xl\" fontWeight=\"bold\" mb=\"4\">\n  Just Added\n  </Text>\n  <Flex flexWrap=\"wrap\" justifyContent=\"center\" alignItems={'flex-end'} flexDirection={'column'}>\n  {coursesToShow.map((course, index) => (\n  <CourseCards\n  key={index}\n  img={course.img}\n  title={course.title}\n  description={course.description}\n  active={index === activeIndex}\n  onClick={() => handleCourseCardClick(index)}\n  />\n  ))}\n  </Flex>\n  <Box mt=\"4\">\n  <Button  variant='outline'\n       coursesPerPage={coursesPerPage}\n       totalCourses={courseData.courses.length}\n       paginate={paginate}\n     >Test</Button>\n  </Box>\n  </Box>\n  );\n  };\n  \n  export default JustAdded;\n  \n  \n  \n  \n  \n  "],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,gBAAgB;AACxC,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,SAASC,GAAG,QAAQ,kBAAkB;AACtC,SAASC,IAAI,EAAEC,IAAI,EAAGC,MAAM,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,UAAU,GAAG;EACjBC,OAAO,EAAE,CACP;IACEC,GAAG,EAAET,MAAM;IACXU,KAAK,EAAE,uCAAuC;IAC9CC,WAAW,EAAE;EACf,CAAC,EACD;IACEF,GAAG,EAAET,MAAM;IACXU,KAAK,EAAE,uCAAuC;IAC9CC,WAAW,EAAE;EACf,CAAC,EACD;IACEF,GAAG,EAAET,MAAM;IACXU,KAAK,EAAE,uCAAuC;IAC9CC,WAAW,EAAE;EACf,CAAC,EACD;IACEF,GAAG,EAAET,MAAM;IACXU,KAAK,EAAE,uCAAuC;IAC9CC,WAAW,EAAE;EACf,CAAC,EACD;IACEF,GAAG,EAAET,MAAM;IACXU,KAAK,EAAE,cAAc;IACrBC,WAAW,EAAE;EACf,CAAC;AAEL,CAAC;AAED,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC3B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACmB,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAMqB,cAAc,GAAG,CAAC,CAAC,CAAC;;EAE1B,MAAMC,qBAAqB,GAAIC,KAAK,IAAK;IACvCL,cAAc,CAACK,KAAK,CAAC;EACvB,CAAC;;EAED;EACA,MAAMC,SAAS,GAAGL,WAAW,GAAGE,cAAc;;EAE9C;EACA,MAAMI,UAAU,GAAGD,SAAS,GAACH,cAAc;;EAE3C;EACA,MAAMK,aAAa,GAAGjB,UAAU,CAACC,OAAO,CAACiB,KAAK,CAACF,UAAU,EAAED,SAAS,CAAC;;EAErE;EACA,MAAMI,QAAQ,GAAIC,UAAU,IAAK;IACjCT,cAAc,CAACS,UAAU,CAAC;EAC1B,CAAC;EAED,oBACArB,OAAA,CAACL,GAAG;IAAA2B,QAAA,gBACJtB,OAAA,CAACH,IAAI;MAAC0B,QAAQ,EAAC,KAAK;MAACC,UAAU,EAAC,MAAM;MAACC,EAAE,EAAC,GAAG;MAAAH,QAAA,EAAC;IAE9C;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO,eACP7B,OAAA,CAACJ,IAAI;MAACkC,QAAQ,EAAC,MAAM;MAACC,cAAc,EAAC,QAAQ;MAACC,UAAU,EAAE,UAAW;MAACC,aAAa,EAAE,QAAS;MAAAX,QAAA,EAC7FJ,aAAa,CAACgB,GAAG,CAAC,CAACC,MAAM,EAAEpB,KAAK,kBACjCf,OAAA,CAACP,WAAW;QAEZU,GAAG,EAAEgC,MAAM,CAAChC,GAAI;QAChBC,KAAK,EAAE+B,MAAM,CAAC/B,KAAM;QACpBC,WAAW,EAAE8B,MAAM,CAAC9B,WAAY;QAChC+B,MAAM,EAAErB,KAAK,KAAKN,WAAY;QAC9B4B,OAAO,EAAEA,CAAA,KAAMvB,qBAAqB,CAACC,KAAK;MAAE,GALvCA,KAAK;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAOT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACK,eACP7B,OAAA,CAACL,GAAG;MAAC2C,EAAE,EAAC,GAAG;MAAAhB,QAAA,eACXtB,OAAA,CAACF,MAAM;QAAEyC,OAAO,EAAC,SAAS;QACrB1B,cAAc,EAAEA,cAAe;QAC/B2B,YAAY,EAAEvC,UAAU,CAACC,OAAO,CAACuC,MAAO;QACxCrB,QAAQ,EAAEA,QAAS;QAAAE,QAAA,EACpB;MAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAS;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACX;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACA;AAEN,CAAC;AAACrB,EAAA,CAjDEF,SAAS;AAAAoC,EAAA,GAATpC,SAAS;AAmDb,eAAeA,SAAS;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}